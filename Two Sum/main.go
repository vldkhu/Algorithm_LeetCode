// Задача
// Учитывая массив целых чисел nums и целое число target, верните индексы этих двух чисел так, чтобы их сумма равнялась target.
// Вы можете предположить, что каждый вход будет иметь ровно одно решение, и не можете использовать один и тот же элемент дважды.
// Вы можете возвращать ответы в любом порядке.
// Input: nums = [2,7,11,15], target = 9
// Output: [0,1]

/*
Для решения этой задачи надо сделать:
1. Обход каждого числа в массиве и нахождение пар, которые в сумме дают `target`.
2. Эффективный способ поиска может быть через использование хэш-таблицы (словаря) для отслеживания уже проверенных значений.
Это позволяет избежать повторного обхода всего массива для поиска соответствующей пары.
*/
package main

func twoSum(nums []int, target int) []int {
	numMap := make(map[int]int)

	for i, num := range nums {
		complement := target - num

		if index, found := numMap[complement]; found {
			return []int{index, i}
		}

		numMap[num] = i
	}

	return []int{}
}
